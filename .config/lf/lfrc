# interpreter for shell commands
set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 5

# Basic Settings
set hidden true
#set drawbox true
set icons true
set ignorecase true
set smartcase true
set mouse
set previewer preview
set preview

cmd open $$OPENER $f

cmd on-cd &{{
	sed -i "\|^$PWD$|d" ~/.local/share/cdhist
	echo "$PWD" >> ~/.local/share/cdhist
}}

cmd extract ${{
	# extract the current file with the right command
	# (xkcd link: https://xkcd.com/1168/)
	set -f
	for f in $fx; do case "$f" in
				*.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf "$f" ;;
				*.tar.gz|*.tgz) tar xzvf "$f" ;;
				*.tar.xz|*.txz) tar xJvf "$f" ;;
				*.zip) unzip "$f" ;;
				*.rar) unrar x "$f" ;;
				*.7z) 7z x "$f" ;;
				*) echo "Unsupported format" >&2; exit 1 ;;
		esac done
}}

cmd select_eval ${{
	res="$(eval "$@")"
  [ -d "$res" ] &&
		lf -remote "send $id cd \"$res\"" ||
		lf -remote "send $id select \"$res\""
}}

# Basic Functions
cmap <tab> cmd-menu-complete
cmap <backtab> cmd-menu-complete-back
map <enter> shell
map <delete> trash
map <c-space> set preview!
map <c-n> push $mkdir<space>""<c-b>
map <a-s> :source ~/.config/lf/lfrc
map <tab> :toggle; down
map <backtab> :toggle; up
map <c-j> select_eval "fzf --reverse --header-first --header='Jump to location'"
map <c-k> ${{ lf -remote "send $id cd \"$(cat ~/.local/share/cdhist |
	fzf --tac --reverse --header-first --header='Path History')\"" }}
map <c-c> ${{ lf -remote "send $id cd \"$(find -mindepth 1 -type d |
	fzf --reverse --header-first --header='Jump to directory')\"" }}

map c
map d
map o $LESSOPEN="lesspreview.sh %s" less $f
map O $mimeopen --ask $f
map . set hidden!
map x cut
map M select_eval fmd
map D delete
map W $setsid -f $TERMINAL >/dev/null 2>&1
map X !$f
map T !tst $f
map B $vidir
map b $setbg $f
map V push :!nvim<space>""<c-b>

map ge extract $f
map gl clear
map gx ${{ chmod u+x $fx; lf -remote "send $id reload"; }}
map gX ${{ chmod -x $fx; lf -remote "send $id reload"; }}
map gm push $chmod<space>--<space>$fx<c-a><a-f><space>
map gL %lf -remote "send ${id} select '$(readlink $f)'"
map gd !du -hd1
map gy %{{ printf "%s" "$f" | xsel -b }}
map gY %{{ printf "%s" "$fs" | xsel -b }}
map gi %{{ [ -e index.html ] && [ ! -L index.html ] &&
	{ echo "Failed: index.html already exists and is not a symbolic link"; exit; }
	ln -sf "$f" index.html }}

map zpd set previewer preview
map zpt set previewer cat
map zpb set previewer bat-preview
map zph set previewer highlight-preview

# Trash Mappings
map dd  ${{ echo "$fx" | xargs -I{} trash-put "{}" }}
map dtc $trash-empty
map dtr $trash-restore

# Dragon Mapping
map dr %dragon-drop -a -x $fx
map ds %dragon-drop -a $fx
map di %dragon-drop $fx
map dm %cpdragon
map dc %mvdragon
map dl %dlfile

source ~/.config/lf/shortcutrc
