#!/bin/sh

help() {
	echo "serv - server mode manager

USAGE:
	serv [OPTION]...

OPTIONS:
	-x  exit server mode
	-s  show status
	-l  lock tty after starting server
	-h  show this help message"
}

err() { printf 'serv: %s\n' "$@" >&2; exit 1; }

while getopts 'lsxh' o; do case "$o" in
	l) lflag=0 ;;
	s) sflag=0 ;;
	x) xflag=0 ;;
	h) help >&2; exit ;;
	*) err "invalid option -- '$OPTARG'" ;;
esac done
shift $((OPTIND - 1))

is_inhibiting() { [ -n "$(systemd-inhibit --list --no-pager --no-legend |
	grep "serv.*handle-lid-switch.*keep servers active")" ]; }

if [ "$sflag" = 0 ]; then
	pgrep -O1 -f '/bin/sh.*serv' >/dev/null &&
		echo "Server mode is ACTIVE" ||
		echo "Server mode is INACTIVE"
	exit
fi

if [ "$xflag" = 0 ]; then
	pkill -O1 -f '/bin/sh.*serv.*'
	systemctl is-active sshd >/dev/null && sudo systemctl stop sshd
	pgrep kolibri >/dev/null && kolibri stop
	pkill -f 'systemd-inhibit --who=serv'
	exit
fi

is_inhibiting || systemd-inhibit --who=serv --why='keep servers active' \
	--what=handle-lid-switch sleep 12h &

systemctl is-active sshd >/dev/null || sudo systemctl start sshd

load-data
pgrep kolibri >/dev/null || kolibri start

if [ "$lflag" = 0 ]; then
	case "$TERM" in
		linux*) vlock -a ;;
		tmux*) tmux lock-server ;;
		*) err "no lock command for TERM: $TERM" ;;
	esac
fi

echo "watching for system..."
while sleep 15m; do
	time="$(($(date +%-H)*60 + $(date +%-M)))"
	if [ "$time" -ge 1380 ]; then
	#	ssh blue "termux-notification \
	#		--title '$USER@$(hostname)' \
	#		--content 'System is going to suspend'"
		sleep 15m
		systemctl suspend
	fi
done

